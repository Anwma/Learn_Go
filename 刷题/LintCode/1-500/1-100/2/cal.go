package main

func Factorial(n uint64) (result uint64) {
	if n > 0 {
		result = n * Factorial(n-1)
		return result
	}
	return 1
}

func main() {
	//a := uint64(62044840173323943936)
	//20！/1000后
	//a *= 5
	//fmt.Println(a)
	//  33 7200 2183 3328 2304 0000
	// 224 8001 4555 5521 5360 0000
	//--------------------------------- "+"
	// 258 5201 6738 8849 7664 0000

	//1034 0806 6955 5399 0656 0000
	//5170 4033 4777 6995 3280 0000
	//--------------------------------- "+"
	//6204 4840 1733 2394 3936 0000

	//for i := 21; i < 26; i++ {
	//	a = a * uint64(i)
	//	fmt.Printf("%d 的阶乘是 %d\n", i, a)
	//}

	//20 的阶乘是      2 432 902 008 176 640 000
	//21 的阶乘是     51 090 942 171 709 440 000
	//22 的阶乘是  1 124 000 727 777 607 680 000
	//23 的阶乘是 25 852 016 738 884 976 640 000
	//24 的阶乘是 67 046 079 521 952 890 880 000
	//25 的阶乘是 15 945 021 414 962 626 560 000
}
